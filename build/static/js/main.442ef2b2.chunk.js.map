{"version":3,"sources":["api/api.js","components/MainContainer/MainContainer.js","countrypage/CountryDescription.jsx","countrypage/getBoundaryColor.js","countrypage/languageSwitcher.js","countrypage/CountryMap.jsx","countrypage/DataTime.jsx","countrypage/Exchange.jsx","countrypage/weather-icons/drizzle.svg","countrypage/weather-icons/clear-day.svg","countrypage/weather-icons/cloudy.svg","countrypage/weather-icons/rain.svg","countrypage/weather-icons/mist.svg","countrypage/weather-icons/snow.svg","countrypage/weather-icons/thunder.svg","countrypage/weather-icons/partly-cloudy-day.svg","countrypage/getWeatherIcons.js","countrypage/Weather.jsx","countrypage/CountryWidgets.jsx","countrypage/Gallery/Gallery.js","countrypage/Video/Video.js","countrypage/Preloader/Preloader.js","countrypage/Rating.jsx","countrypage/CountryPage.jsx","assets/images/rs_school-logo.svg","components/Footer/Footer.js","components/GridLayout/GridItem.js","components/GridLayout/GridLayout.js","components/NavigationBar/SelectLang.js","components/NavigationBar/Search.js","components/NavigationBar/NavigationBar.js","userAuthorization/TextFieldInput.jsx","userAuthorization/formValidation.js","userAuthorization/TextFieldPassword.jsx","userAuthorization/LoginForm/LoginForm.jsx","const.js","userAuthorization/LoginForm/loginFormSubmitHandler.js","userAuthorization/RegistrationForm/RegistrationForm.jsx","userAuthorization/RegistrationForm/registrationFormSubmitHandler.js","userAuthorization/UserAuthorization.jsx","App.js","index.js"],"names":["instance","Axios","create","baseURL","userAPI","lang","get","then","response","data","useStyles","makeStyles","theme","root","marginTop","spacing","minHeight","MainContainer","children","classes","Container","className","CountryDescription","country","countryInf","description","image","alt","mainImage","src","data-testid","getBoundaryColor","matchExpression","push","languageTemplate","en","currentTime","todayWeather","feelsLike","wind","speed","humidity","exchange","EUR","USD","RUB","lng","lat","zoom","searchPlaceholder","designedBy","ru","pl","getPhrase","language","phrase","mapboxgl","accessToken","CountryMap","alpha3Code","location","long","mapContainer","useRef","useState","longitude","setLng","latitude","setLat","setZoom","useEffect","map","Map","container","current","style","center","Marker","setLngLat","addTo","addControl","FullscreenControl","on","getCenter","toFixed","getZoom","addSource","type","url","addLayer","id","source","paint","getStyle","layers","filter","layer","test","forEach","labelLayer","setLayoutProperty","remove","ref","DataTime","timezone","time","setTime","tick","date","Date","options","timeZone","year","month","day","weekday","hour","minute","second","timeZoneName","toLocaleString","timer","setInterval","clearInterval","Exchange","rates","getIcon","weatherName","Drizzle","Clear","Clouds","Rain","Fog","Snow","Thunderstorm","Default","Weather","weatherState","main","feels_like","weather","width","height","Math","round","CountryWidgets","isOpen","isOpenChange","onClick","fontSize","Gallery","count","setCount","galleryRef","galleryImages","toggleFullscreen","document","fullscreenElement","exitFullscreen","requestFullscreen","length","item","index","thumbnail","Video","video","title","frameBorder","allow","allowFullScreen","Preloader","CountryRating","countryId","rating","isTokenExisting","sessionStorage","getItem","value","setValue","isDisabled","setDisabled","error","setError","Typography","component","Rating","name","readOnly","disabled","onChange","event","newValue","vote","countryUrl","myHeaders","Headers","append","urlencoded","URLSearchParams","fetch","method","headers","body","redirect","text","createRating","result","setTimeout","defaultProps","withRouter","match","isLoaded","setIsLoaded","setCountryInf","params","res","json","currencyCode","currencyUrl","weatherUrl","Promise","all","exchangeRatesInf","list","err","message","companyInformation","display","flexDirection","justifyContent","footer","padding","backgroundColor","color","palette","common","white","icon","margin","logoRsSchool","marginBottom","copyright","Footer","Grid","lg","md","sm","xs","Link","href","Icon","GitHub","getFullYear","card","background","cardImage","GridItem","subheader","Card","CardHeader","to","CardMedia","CardContent","noWrap","CardActions","IconButton","aria-label","GridLayout","countries","toLowerCase","includes","capital","formControl","borderRadius","marginLeft","languageIcon","alignSelf","marginRight","select","selectEmpty","SelectLang","handleLanguageChange","formContainer","FormControl","variant","Select","MenuItem","alignItems","input","flex","iconButton","divider","Search","handleSearchChange","searchInputValue","Paper","InputBase","placeholder","inputProps","e","target","onKeyPress","key","preventDefault","autoFocus","Divider","orientation","link","textDecoration","opacity","siteTitle","fontWeight","letterSpacing","toolbarLarge","breakpoints","up","toolbarSmall","menuBox","menuOption","textTransform","menuIcon","toggleMenu","toggleMenuOpen","state","setState","isAuthToken","Boolean","isAuth","setIsAuth","isSearchVisible","pathname","removeToken","clear","setResponsiveness","window","innerWidth","prevState","addEventListener","AppBar","Toolbar","Drawer","anchor","open","onClose","Box","Button","size","TextFieldInput","validate","props","useField","initialValue","undefined","meta","isError","TextField","InputProps","helperText","minLengthValidation","requiredLength","TextFieldPassword","showPassword","setShowPassword","startAdornment","InputAdornment","position","onMouseDown","Visibility","VisibilityOff","LoginForm","onSubmit","history","useHistory","setIsOpen","handleClose","_","reason","handleSubmit","invalid","submitting","form","pristine","catch","reset","mx","AccountCircle","my","Snackbar","autoHideDuration","elevation","severity","API_HOST_OK_TRAVEL","API_OK_TRAVEL_ENDPOINTS","login","registration","loginFormSubmitHandler","formValues","a","formValuesEntries","Object","entries","join","status","removeItem","Error","statusText","token","setItem","RegistrationForm","registrationFormSubmitHandler","console","log","UserAuthorization","justify","App","setData","setFilter","setLang","currentLanguage","localStorage","fetchData","exact","path","render","from","AppContainer","basename","process","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.442ef2b2.chunk.js","sourcesContent":["import Axios from 'axios';\n\nconst instance = Axios.create({\n  baseURL: 'https://oktravel.herokuapp.com/',\n});\n\nexport const userAPI = {\n  getCountries(lang) {\n    return instance\n      .get(`countries?lang=${lang}`)\n      .then((response) => response.data);\n  },\n};\n","import React from 'react';\nimport { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(16),\n    minHeight: 'calc(100vh - 380px)',\n  },\n}));\n\nconst MainContainer = ({ children }) => {\n  const classes = useStyles();\n\n  return (\n    <Container className={classes.root}>\n      <main>{children}</main>\n    </Container>\n  );\n};\n\nMainContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default MainContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CountryDescription = ({ countryInf }) => {\n  const { country } = countryInf;\n  const { description, image: { alt, mainImage } } = country;\n  return (\n    <div className=\"country__description\">\n      <div>\n        <img className=\"country__description_image\" src={mainImage} alt={alt} />\n        <h1 className=\"country__description_town_name\" data-testid=\"alt\">{alt}</h1>\n      </div>\n      <div>\n        <p className=\"country__description_text\">\n          {description}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nCountryDescription.propTypes = {\n  countryInf: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default CountryDescription;\n","const getBoundaryColor = (country) => {\n  const matchExpression = ['match', ['get', 'iso_3166_1_alpha_3']];\n  const color = 'rgb(0, 128, 0)';\n  matchExpression.push(country, color, 'rgba(0, 0, 0, 0)');\n  return matchExpression;\n};\n\nexport default getBoundaryColor;\n","const languageTemplate = {\n  en: {\n    currentTime: 'Current Time',\n    todayWeather: 'Today Weather',\n    feelsLike: 'feels like',\n    wind: 'wind',\n    speed: 'm/s',\n    humidity: 'humidity',\n    exchange: 'Exchange Rate',\n    EUR: 'EUR',\n    USD: 'USD',\n    RUB: 'RUB',\n    lng: 'Longitude',\n    lat: 'Latitude',\n    zoom: 'Zoom',\n    searchPlaceholder: 'Search',\n    designedBy: 'Designed by',\n  },\n  ru: {\n    currentTime: 'Текущее Время',\n    todayWeather: 'Погода Сегодня',\n    feelsLike: 'ощущается',\n    wind: 'ветер',\n    speed: 'м/c',\n    humidity: 'влажность',\n    exchange: 'Курсы Валют',\n    EUR: 'Евро',\n    USD: 'Доллар',\n    RUB: 'Рубль',\n    lng: 'Долгота',\n    lat: 'Широта',\n    zoom: 'Масштаб',\n    searchPlaceholder: 'Поиск',\n    designedBy: 'Разработано',\n  },\n  pl: {\n    currentTime: 'Obecny Czas',\n    todayWeather: 'Dzisiejsza Pogoda',\n    feelsLike: 'czuje się jak',\n    wind: 'wiatr',\n    speed: 'm/s',\n    humidity: 'wilgotność',\n    exchange: 'Kurs wymiany',\n    EUR: 'EUR',\n    USD: 'USD',\n    RUB: 'RUB',\n    lng: 'Długość geograficzna',\n    lat: 'Szerokość',\n    zoom: 'Powiększenie',\n    searchPlaceholder: 'Szukaj',\n    designedBy: 'Zaprojektowany przez',\n  },\n};\n\nconst getPhrase = (language, phrase) => languageTemplate[language][phrase];\nexport default getPhrase;\n","import React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport mapboxgl from 'mapbox-gl';\nimport getBoundaryColor from './getBoundaryColor';\nimport getPhrase from './languageSwitcher';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoiZmFudG9td2Fsa2VyIiwiYSI6ImNramxmcXd2eTIyc2Iyc2xvcTJ3cmdsNmwifQ.mU8FFb3Kc3cihmCMAk6Spw';\n\nconst CountryMap = ({ lang, countryInf }) => {\n  const { country } = countryInf;\n  const { alpha3Code, location: { lat, long } } = country;\n  const mapContainer = useRef();\n  const [longitude, setLng] = useState(long);\n  const [latitude, setLat] = useState(lat);\n  const [zoom, setZoom] = useState(4.5);\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [longitude, latitude],\n      zoom,\n    });\n\n    new mapboxgl.Marker().setLngLat([longitude, latitude]).addTo(map);\n    map.addControl(new mapboxgl.FullscreenControl());\n    map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n\n    map.on('load', () => {\n      map.addSource('countries', {\n        type: 'vector',\n        url: 'mapbox://mapbox.country-boundaries-v1',\n      });\n      map.addLayer(\n        {\n          id: 'countries-join',\n          type: 'line',\n          source: 'countries',\n          'source-layer': 'country_boundaries',\n          paint: {\n            'line-color': getBoundaryColor(alpha3Code),\n            'line-width': 4,\n          },\n        },\n        'admin-1-boundary-bg',\n      );\n\n      const labelList = map.getStyle().layers.filter((layer) => /-label/.test(layer.id));\n      labelList.forEach((labelLayer) => {\n        map.setLayoutProperty(labelLayer.id, 'text-field', ['coalesce', ['get', `name_${lang}`], ['get', 'name']]);\n      });\n    });\n\n    return () => map.remove();\n  }, [lang]);\n\n  return (\n    <div className=\"map_wrapper\">\n      <div className=\"sidebar\">\n        {`${getPhrase(lang, 'lng')}: ${longitude} | ${getPhrase(lang, 'lat')}: ${latitude} | ${getPhrase(lang, 'zoom')}: ${zoom}`}\n      </div>\n      <div className=\"map-container\" ref={mapContainer} />\n    </div>\n  );\n};\n\nCountryMap.propTypes = {\n  lang: PropTypes.string.isRequired,\n  countryInf: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default CountryMap;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport getPhrase from './languageSwitcher';\n\nconst DataTime = ({ lang, timezone }) => {\n  const [time, setTime] = useState('');\n\n  const tick = () => {\n    const date = new Date();\n    const options = {\n      timeZone: timezone,\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      weekday: 'short',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      timeZoneName: 'short',\n    };\n    setTime(date.toLocaleString(lang, options));\n  };\n\n  useEffect(() => {\n    const timer = setInterval(tick, 1000);\n    return () => clearInterval(timer);\n  }, [lang]);\n\n  return (\n    <div className=\"country__widgets__datatime\">\n      <h3 data-testid=\"currenttime\">{getPhrase(lang, 'currentTime')}</h3>\n      <span>{time}</span>\n    </div>\n  );\n};\n\nDataTime.propTypes = {\n  lang: PropTypes.string.isRequired,\n  timezone: PropTypes.string.isRequired,\n};\n\nexport default DataTime;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport getPhrase from './languageSwitcher';\n\nconst Exchange = ({ lang, rates }) => {\n  const { EUR, USD, RUB } = rates;\n  const defaultValueToEUR = 1;\n  return (\n    <div className=\"country__widgets__exchange\">\n      <h3>{getPhrase(lang, 'exchange')}</h3>\n      <div>\n        <div>\n          <div className=\"flag flag__eu\" />\n          <span data-testid=\"EUR\">{`${getPhrase(lang, 'EUR')}: ${EUR?.toFixed(2) || defaultValueToEUR.toFixed(2)}`}</span>\n        </div>\n        <div>\n          <div className=\"flag flag__us\" />\n          <span data-testid=\"USD\">{`${getPhrase(lang, 'USD')}: ${USD.toFixed(2)}`}</span>\n        </div>\n        <div>\n          <div className=\"flag flag__ru\" />\n          <span>{`${getPhrase(lang, 'RUB')}: ${RUB.toFixed(2)}`}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nExchange.propTypes = {\n  rates: PropTypes.instanceOf(Object).isRequired,\n  lang: PropTypes.string.isRequired,\n};\n\nexport default Exchange;\n","export default __webpack_public_path__ + \"static/media/drizzle.8f834454.svg\";","export default __webpack_public_path__ + \"static/media/clear-day.320b497b.svg\";","export default __webpack_public_path__ + \"static/media/cloudy.8fa39863.svg\";","export default __webpack_public_path__ + \"static/media/rain.a619711b.svg\";","export default __webpack_public_path__ + \"static/media/mist.849abfda.svg\";","export default __webpack_public_path__ + \"static/media/snow.444171ab.svg\";","export default __webpack_public_path__ + \"static/media/thunder.9d4b81cc.svg\";","export default __webpack_public_path__ + \"static/media/partly-cloudy-day.90f88a5e.svg\";","import Drizzle from './weather-icons/drizzle.svg';\nimport Clear from './weather-icons/clear-day.svg';\nimport Clouds from './weather-icons/cloudy.svg';\nimport Rain from './weather-icons/rain.svg';\nimport Fog from './weather-icons/mist.svg';\nimport Snow from './weather-icons/snow.svg';\nimport Thunderstorm from './weather-icons/thunder.svg';\nimport Default from './weather-icons/partly-cloudy-day.svg';\n\nconst getIcon = (weatherName) => {\n  switch (weatherName) {\n    case ('Drizzle'):\n      return Drizzle;\n    case ('Clear'):\n      return Clear;\n    case ('Clouds'):\n      return Clouds;\n    case ('Rain'):\n      return Rain;\n    case ('Fog'):\n      return Fog;\n    case ('Haze'):\n      return Fog;\n    case ('Snow'):\n      return Snow;\n    case ('Thunderstorm'):\n      return Thunderstorm;\n    default:\n      return Default;\n  }\n};\n\nexport default getIcon;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport getIcon from './getWeatherIcons';\nimport getPhrase from './languageSwitcher';\n\nconst Weather = ({ lang, weatherState }) => {\n  const { main: { feels_like, humidity }, weather, wind: { speed } } = weatherState;\n  const { main, description } = weather[0];\n\n  return (\n    <div className=\"country__widgets__weather\">\n      <h3>{getPhrase(lang, 'todayWeather')}</h3>\n      <div className=\"weather__temperature\" />\n      <div className=\"weather__forecast\">\n        <div className=\"weather__cloudy\">\n          <img src={getIcon(main)} alt={main} width=\"150\" height=\"150\" />\n        </div>\n        <div className=\"weather__description\">\n          <span data-testid=\"description\">{description}</span>\n          <span>{`${getPhrase(lang, 'feelsLike')}: ${Math.round(feels_like)}℃`}</span>\n          <span>{`${getPhrase(lang, 'wind')}: ${Math.round(speed)} ${getPhrase(lang, 'speed')}`}</span>\n          <span data-testid=\"humidity\">{`${getPhrase(lang, 'humidity')}: ${humidity}%`}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nWeather.propTypes = {\n  weatherState: PropTypes.instanceOf(Object).isRequired,\n  lang: PropTypes.string.isRequired,\n};\n\nexport default Weather;\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport DataTime from './DataTime';\nimport Exchange from './Exchange';\nimport Weather from './Weather';\n\nconst CountryWidgets = ({ lang, countryInf }) => {\n  const { rates, weatherState, country: { timezone } } = countryInf;\n  const [isOpen, isOpenChange] = useState(false);\n  return (\n    <div className=\"country__widgets\">\n      <div className={isOpen ? 'country__widgets_block country__widgets_block_active' : 'country__widgets_block'}>\n        <DataTime {...{ lang, timezone }} />\n        <Weather {...{ lang, weatherState }} />\n        <Exchange {...{ lang, rates }} />\n        <div className=\"country__widgets_button\" onClick={() => isOpenChange(!isOpen)}>\n          {isOpen ? <KeyboardArrowUpIcon fontSize=\"large\" /> : <KeyboardArrowDownIcon fontSize=\"large\" />}\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nCountryWidgets.propTypes = {\n  lang: PropTypes.string.isRequired,\n  countryInf: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default CountryWidgets;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './gallery.scss';\n\nconst Gallery = ({ countryInf }) => {\n  const [count, setCount] = useState(0);\n  const galleryRef = useRef();\n  const { country } = countryInf;\n  const { galleryImages } = country;\n\n  const toggleFullscreen = () => {\n    if (!document.fullscreenElement) {\n      galleryRef.current.requestFullscreen();\n    } else {\n      document.exitFullscreen();\n    }\n  };\n\n  const showPrev = () => (count === 0 ? setCount(galleryImages.length - 1) : setCount(count - 1));\n  const showNext = () => (count === galleryImages.length - 1 ? setCount(0) : setCount(count + 1));\n\n  return (\n    <div className=\"gallery_wrapper\" ref={galleryRef}>\n      <div className=\"image_main_wrapper\">\n        <div className=\"caption_container\">\n          <p className=\"image_main_name\" data-testid=\"title\">\n            {galleryImages[count].alt}\n          </p>\n          <p className=\"image_main_description\" data-testid=\"description\">\n            {galleryImages[count].description}\n          </p>\n          <div className=\"button_fullscreen\" onClick={toggleFullscreen} />\n        </div>\n        <div className=\"button_prev\" onClick={showPrev}>\n          &#10094;\n        </div>\n        <div className=\"button_next\" onClick={showNext}>\n          &#10095;\n        </div>\n        {galleryImages.map((item, index) => (\n          <img\n            className={\n              index === count ? 'image_main image_main_show' : 'image_main'\n            }\n            src={item.mainImage}\n            alt={item.alt}\n            onClick={toggleFullscreen}\n            key={item.mainImage}\n          />\n        ))}\n      </div>\n      <div className=\"thumb_wrapper\">\n        {galleryImages.map((item, index) => (\n          <img\n            className={\n              index === count\n                ? 'image_thumbnail image_thumbnail_active'\n                : 'image_thumbnail'\n            }\n            onClick={() => setCount(index)}\n            src={item.thumbnail}\n            alt={item.alt}\n            key={item.thumbnail}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nGallery.propTypes = {\n  countryInf: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Gallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './video.scss';\n\nconst Video = ({ countryInf }) => {\n  const { country } = countryInf;\n  const { video } = country;\n  return (\n    <div className=\"country_video_wrapper\">\n      <iframe className=\"country_video\" title=\"country-video\" src={video} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen />\n    </div>\n  );\n};\n\nVideo.propTypes = {\n  countryInf: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Video;\n","import React from 'react';\nimport './preloader.scss';\n\nconst Preloader = () => (\n  <div className=\"preloader preloader_active\">\n    <div className=\"preloader_wrapper\">\n      <div className=\"preloader_item preloader_item_1\" />\n      <div className=\"preloader_item preloader_item_2\" />\n      <div className=\"preloader_item preloader_item_3\" />\n      <div className=\"preloader_item preloader_item_4\" />\n      <div className=\"preloader_item preloader_item_5\" />\n    </div>\n  </div>\n);\n\nexport default Preloader;\n","import React, { useState } from 'react';\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\n\nconst CountryRating = ({ countryId, countryInf }) => {\n  const { country: { rating } } = countryInf;\n  const isTokenExisting = !sessionStorage.getItem('authToken');\n  const [value, setValue] = useState(rating);\n  const [isDisabled, setDisabled] = useState(false);\n  const [error, setError] = useState(null);\n\n  function createRating(vote) {\n    const countryUrl = `https://oktravel.herokuapp.com/countries/${countryId}/vote`;\n    const myHeaders = new Headers();\n    myHeaders.append('Authorization', sessionStorage.getItem('authToken'));\n    myHeaders.append('Content-Type', 'application/x-www-form-urlencoded');\n    const urlencoded = new URLSearchParams();\n    urlencoded.append('rating', `${vote}`);\n    const requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: urlencoded,\n      redirect: 'follow',\n    };\n    return fetch(countryUrl, requestOptions)\n      .then((response) => response.text());\n  }\n\n  const handleRating = (event, newValue) => {\n    setDisabled(true);\n    createRating(newValue).then((result) => {\n      if (result !== 'success') {\n        setError('something went wrong, please try again');\n        setTimeout(setError, 5000, null);\n      }\n      setDisabled(false);\n      setValue(newValue);\n    });\n  };\n\n  return (\n    <div className=\"rating\">\n      <Typography component=\"legend\" data-testid=\"rating\">Rating</Typography>\n      <Rating\n        name=\"simple-controlled\"\n        readOnly={isTokenExisting}\n        disabled={isDisabled}\n        value={value}\n        onChange={handleRating}\n      />\n      {error ? <span className=\"rating__error\">{error}</span> : null}\n    </div>\n  );\n};\n\nCountryRating.propTypes = {\n  countryInf: PropTypes.instanceOf(Object).isRequired,\n  countryId: PropTypes.string,\n};\n\nCountryRating.defaultProps = {\n  countryId: '',\n};\n\nexport default CountryRating;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Container from '@material-ui/core/Container';\nimport CountryDescription from './CountryDescription';\nimport CountryMap from './CountryMap';\nimport CountryWidgets from './CountryWidgets';\nimport './countrypage.scss';\nimport Gallery from './Gallery/Gallery';\nimport Video from './Video/Video';\nimport Preloader from './Preloader/Preloader';\nimport CountryRating from './Rating';\n\nconst CountryPage = ({ lang, match }) => {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [countryInf, setCountryInf] = useState({});\n  const { params: { countryId } } = match;\n\n  useEffect(() => {\n    const dayCount = 1;\n    const units = 'metric';\n    const weatherId = '238369625c38823901147f9e59ee369d';\n    const weatherUrlBase = 'https://api.openweathermap.org/data/2.5/forecast?';\n    const countryUrl = `https://oktravel.herokuapp.com/countries/${countryId}?lang=${lang}`;\n\n    fetch(countryUrl).then((res) => res.json())\n      .then((country) => {\n        const { currencyCode, location: { lat, long } } = country;\n        const currencyUrl = `https://api.exchangeratesapi.io/latest?base=${currencyCode}`;\n        const weatherUrl = `${weatherUrlBase}lat=${lat}&lon=${long}&lang=${lang}&cnt=${dayCount}&units=${units}&appid=${weatherId}`;\n        Promise.all([\n          fetch(currencyUrl).then((res) => res.json()),\n          fetch(weatherUrl).then((res) => res.json()),\n        ]).then(\n          ([exchangeRatesInf, weather]) => {\n            const weatherState = weather.list[0];\n            const { rates } = exchangeRatesInf;\n            setCountryInf({ country, rates, weatherState });\n            setIsLoaded(true);\n          },\n          (err) => {\n            setIsLoaded(true);\n            setError(err);\n          },\n        );\n      });\n  }, [lang]);\n\n  if (error) {\n    return (\n      <div>\n        Ошибка:\n        {error.message}\n      </div>\n    );\n  } if (!isLoaded) {\n    return <Preloader />;\n  }\n  return (\n    <Container>\n      <div className=\"country__container\">\n        <div className=\"country__information\">\n          <CountryDescription {...{ countryInf }} />\n          <CountryRating {...{ countryId, countryInf }} />\n          <Gallery {...{ countryInf }} />\n          <Video {...{ countryInf }} />\n          <CountryMap {...{ lang, countryInf }} />\n        </div>\n        <CountryWidgets {...{ lang, countryInf }} />\n      </div>\n    </Container>\n  );\n};\n\nCountryPage.propTypes = {\n  lang: PropTypes.string.isRequired,\n  match: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default withRouter(CountryPage);\n","export default __webpack_public_path__ + \"static/media/rs_school-logo.4c632dc7.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Grid, Typography, Icon, Link,\n} from '@material-ui/core';\nimport { GitHub } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport logoRsSchool from '../../assets/images/rs_school-logo.svg';\nimport getPhrase from '../../countrypage/languageSwitcher';\n\nconst useStyles = makeStyles((theme) => ({\n  companyInformation: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n  },\n  footer: {\n    padding: theme.spacing(6),\n    backgroundColor: '#2f2f2f',\n    color: theme.palette.common.white,\n    marginTop: theme.spacing(10),\n  },\n  icon: {\n    margin: theme.spacing(0.5),\n  },\n  logoRsSchool: {\n    width: '100px',\n    marginBottom: theme.spacing(3),\n  },\n  copyright: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport default function Footer({ lang }) {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Grid container>\n        <Grid item lg={6} md={10} sm={12} xs={12}>\n          <Link href=\"https://rs.school\">\n            <img\n              className={classes.logoRsSchool}\n              src={logoRsSchool}\n              alt=\"logoRsSchool\"\n            />\n          </Link>\n        </Grid>\n\n        <Grid\n          className={classes.companyInformation}\n          item\n          lg={6}\n          md={10}\n          sm={12}\n          xs={12}\n        >\n          <Typography>\n            {getPhrase(lang, 'designedBy')}\n            :\n          </Typography>\n          <Grid item>\n            <Icon className={classes.icon}>\n              <Link href=\"https://github.com/nottombraider\">\n                <GitHub />\n              </Link>\n            </Icon>\n\n            <Icon className={classes.icon}>\n              <Link href=\"https://github.com/dn9wkalolz\">\n                <GitHub />\n              </Link>\n            </Icon>\n\n            <Icon className={classes.icon}>\n              <Link href=\"https://github.com/AndreiMilashevich\">\n                <GitHub />\n              </Link>\n            </Icon>\n\n            <Icon className={classes.icon}>\n              <Link href=\"https://github.com/AlDemi\">\n                <GitHub />\n              </Link>\n            </Icon>\n          </Grid>\n        </Grid>\n        <Grid item lg={12} md={12} sm={12} xs={12}>\n          <Typography className={classes.copyright}>\n            {`© ${new Date().getFullYear()} oktravel`}\n          </Typography>\n        </Grid>\n      </Grid>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  lang: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    '&:hover': {\n      background: '#f1f1f1',\n    },\n  },\n  cardImage: {\n    height: 300,\n  },\n}));\n\nexport default function GridItem({\n  title,\n  image,\n  description,\n  id,\n  subheader,\n  alt,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader title={title} subheader={subheader} />\n\n      <Link to={`/countries/${id}`}>\n        {image && (\n          <CardMedia className={classes.cardImage} image={image} title={alt} />\n        )}\n      </Link>\n\n      <CardContent>\n        <Typography noWrap>{description}</Typography>\n      </CardContent>\n\n      <CardActions>\n        <Link to={`/countries/${id}`}>\n          <IconButton aria-label=\"Visit page\">\n            <ArrowForward />\n          </IconButton>\n        </Link>\n      </CardActions>\n    </Card>\n  );\n}\n\nGridItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  subheader: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport GridItem from './GridItem';\nimport Preloader from '../../countrypage/Preloader/Preloader';\n\nexport default function GridLayout({ countries, filter }) {\n  if (countries.length === 0) {\n    return <Preloader />;\n  }\n\n  return (\n    <Grid container spacing={3}>\n      {countries.map((country) => {\n        const check = country.name.toLowerCase().includes(filter)\n          || country.capital.toLowerCase().includes(filter);\n\n        if (check) {\n          return (\n            <Grid key={country.id} item lg={4} md={12} sm={12} xs={12}>\n              <GridItem\n                subheader={country.capital}\n                id={country.id}\n                title={country.name}\n                alt={country.image.alt}\n                image={country.image.mainImage}\n                description={country.description}\n                timezone={country.timezone}\n              />\n            </Grid>\n          );\n        }\n\n        return false;\n      })}\n    </Grid>\n  );\n}\n\nGridLayout.propTypes = {\n  countries: PropTypes.arrayOf(PropTypes.object).isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    display: 'flex',\n    padding: '6px 0px',\n    borderRadius: 5,\n    marginLeft: theme.spacing(1),\n    width: 100,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n  },\n  languageIcon: {\n    alignSelf: 'flex-start',\n    marginTop: theme.spacing(0.5),\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  select: {\n    color: theme.palette.common.white,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function SelectLang({ lang, handleLanguageChange }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.formContainer}>\n      <FormControl variant=\"standard\" className={classes.formControl}>\n        <LanguageIcon className={classes.languageIcon} />\n        <Select\n          className={classes.select}\n          value={lang}\n          onChange={handleLanguageChange}\n        >\n          <MenuItem value=\"en\">en</MenuItem>\n          <MenuItem value=\"ru\">ru</MenuItem>\n          <MenuItem value=\"pl\">pl</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n\nSelectLang.propTypes = {\n  handleLanguageChange: PropTypes.func.isRequired,\n  lang: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React, { useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport getPhrase from '../../countrypage/languageSwitcher';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 300,\n    borderRadius: 25,\n  },\n  input: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nexport default function Search({ handleSearchChange, lang }) {\n  const classes = useStyles();\n\n  const searchInputValue = useRef('');\n\n  const handleOnChange = (e) => {\n    searchInputValue.current = e.target.value;\n    handleSearchChange(e.target.value);\n  };\n\n  const onSearchButtonClick = () => {\n    handleSearchChange(searchInputValue.current);\n  };\n\n  const keyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSearchChange(searchInputValue.current);\n    }\n  };\n\n  return (\n    <Paper component=\"form\" className={classes.root}>\n      <InputBase\n        className={classes.input}\n        placeholder={getPhrase(lang, 'searchPlaceholder')}\n        inputProps={{ 'aria-label': 'search' }}\n        onChange={handleOnChange}\n        type=\"search\"\n        onKeyPress={keyPress}\n        autoFocus\n      />\n      <Divider className={classes.divider} orientation=\"vertical\" />\n      <IconButton onClick={onSearchButtonClick} color=\"primary\" className={classes.iconButton} aria-label=\"directions\">\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n\nSearch.propTypes = {\n  handleSearchChange: PropTypes.func.isRequired,\n  lang: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Toolbar,\n  Typography,\n  Box,\n  AppBar,\n  IconButton,\n  MenuItem,\n  Drawer,\n  Button,\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport SelectLang from './SelectLang';\nimport Search from './Search';\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.common.white,\n    '&:hover': {\n      color: '#e0e0e0',\n      opacity: '.7',\n    },\n  },\n  siteTitle: {\n    fontWeight: 400,\n    letterSpacing: 1,\n    marginLeft: theme.spacing(1),\n  },\n  toolbarLarge: {\n    background: '#2f2f2f',\n    display: 'flex',\n    flexDirection: 'column',\n    [theme.breakpoints.up('md')]: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n    },\n  },\n  toolbarSmall: {\n    display: 'flex',\n    background: '#2f2f2f',\n    justifyContent: 'space-between',\n  },\n  menuBox: {\n    display: 'flex',\n    flexDirection: 'column',\n    [theme.breakpoints.up('md')]: {\n      flexDirection: 'row',\n    },\n  },\n  menuOption: {\n    color: theme.palette.common.white,\n    letterSpacing: 1,\n    textTransform: 'none',\n    textDecoration: 'none',\n    '&:hover': {\n      color: '#e0e0e0',\n      opacity: '.7',\n    },\n  },\n  menuIcon: {\n    color: theme.palette.common.white,\n  },\n  toggleMenu: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: theme.spacing(1),\n  },\n}));\n\nfunction NavigationBar({\n  handleSearchChange, lang, handleLanguageChange, location,\n}) {\n  const [state, setState] = useState({\n    toggleMenu: false,\n    toggleMenuOpen: false,\n  });\n\n  const isAuthToken = Boolean(sessionStorage.getItem('authToken'));\n\n  const [isAuth, setIsAuth] = useState(isAuthToken);\n\n  const isSearchVisible = location.pathname === '/countries';\n\n  const { toggleMenu, toggleMenuOpen } = state;\n\n  const removeToken = () => {\n    sessionStorage.clear();\n    setIsAuth(false);\n  };\n\n  useEffect(() => {\n    if (isAuthToken) {\n      setIsAuth(true);\n    } else {\n      setIsAuth(false);\n    }\n  }, [isAuthToken]);\n\n  useEffect(() => {\n    const setResponsiveness = () => (window.innerWidth < 960\n      ? setState((prevState) => ({ ...prevState, toggleMenu: true }))\n      : setState((prevState) => ({ ...prevState, toggleMenu: false })));\n\n    setResponsiveness();\n\n    window.addEventListener('resize', () => setResponsiveness());\n  }, []);\n\n  const classes = useStyles();\n\n  const getToggleMenuOptions = () => (\n    <Box className={classes.toggleMenu}>\n      {isSearchVisible && <Search handleSearchChange={handleSearchChange} lang={lang} />}\n\n      {\n          !isAuth && (\n            <Button\n              variant=\"contained\"\n              onClick={removeToken}\n              color=\"primary\"\n            >\n              <NavLink className={classes.link} to=\"/login\">\n                Login\n              </NavLink>\n            </Button>\n          )\n        }\n      {\n          isAuth && (\n            <Button\n              variant=\"contained\"\n              onClick={removeToken}\n              color=\"primary\"\n            >\n              Logout\n            </Button>\n          )\n        }\n    </Box>\n  );\n\n  const displayToggleMenu = () => {\n    const handleToggleMenuOpen = () => setState((prevState) => (\n      { ...prevState, toggleMenuOpen: true }));\n\n    const handleToggleMenuClose = () => setState((prevState) => (\n      { ...prevState, toggleMenuOpen: false }));\n\n    return (\n      <Toolbar className={classes.toolbarSmall}>\n        <IconButton\n          {...{\n            onClick: handleToggleMenuOpen,\n          }}\n        >\n          <MenuIcon className={classes.menuIcon} />\n        </IconButton>\n        <Typography component=\"h1\" variant=\"h5\" className={classes.siteTitle}>\n          <NavLink className={classes.link} to=\"/countries\">\n            oktravel\n          </NavLink>\n        </Typography>\n        <SelectLang lang={lang} handleLanguageChange={handleLanguageChange} />\n\n        <Drawer\n          {...{\n            anchor: 'left',\n            open: toggleMenuOpen,\n            onClose: handleToggleMenuClose,\n          }}\n        >\n          <div>{getToggleMenuOptions()}</div>\n        </Drawer>\n      </Toolbar>\n    );\n  };\n\n  const displayLargeMenu = () => (\n    <Toolbar className={classes.toolbarLarge}>\n      <Typography component=\"h1\" variant=\"h6\" className={classes.siteTitle}>\n        <NavLink className={classes.link} to=\"/countries\">\n          oktravel\n        </NavLink>\n      </Typography>\n\n      <Box className={classes.menuBox}>\n        {isSearchVisible && <Search handleSearchChange={handleSearchChange} lang={lang} />}\n        <SelectLang lang={lang} handleLanguageChange={handleLanguageChange} />\n\n        {\n          !isAuth && (\n            <MenuItem>\n              <Button\n                className={classes.menuOption}\n                variant=\"outlined\"\n                color=\"inherit\"\n                size=\"medium\"\n                onClick={removeToken}\n              >\n                <NavLink className={classes.link} to=\"/login\">\n                  Login\n                </NavLink>\n              </Button>\n            </MenuItem>\n          )\n        }\n        {\n          isAuth && (\n            <MenuItem>\n              <Button\n                className={classes.menuOption}\n                variant=\"outlined\"\n                color=\"inherit\"\n                size=\"medium\"\n                onClick={removeToken}\n              >\n                Logout\n              </Button>\n            </MenuItem>\n          )\n        }\n      </Box>\n    </Toolbar>\n  );\n\n  return (\n    <Container>\n      <AppBar>{toggleMenu ? displayToggleMenu() : displayLargeMenu()}</AppBar>\n    </Container>\n  );\n}\n\nNavigationBar.propTypes = {\n  handleSearchChange: PropTypes.func.isRequired,\n  handleLanguageChange: PropTypes.func.isRequired,\n  lang: PropTypes.string.isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default withRouter(NavigationBar);\n","import React from 'react';\nimport { useField } from 'react-final-form';\nimport { TextField } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nexport const TextFieldInput = ({\n  name, inputProps, validate, ...props\n}) => {\n  const { input, meta } = useField(name, { validate, initialValue: undefined });\n  const isError = Boolean(meta.error);\n\n  return (\n    <TextField\n      {...input}\n      {...props}\n      InputProps={inputProps}\n      placeholder={name}\n      error={isError}\n      helperText={meta.error}\n      style={!isError ? { marginBottom: '22px' } : undefined}\n    />\n  );\n};\n\nTextFieldInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  validate: PropTypes.func,\n  inputProps: PropTypes.instanceOf(Object),\n};\n\nTextFieldInput.defaultProps = {\n  validate: undefined,\n  inputProps: undefined,\n};\n","export const minLengthValidation = (requiredLength) => (value) => (value && value.length < requiredLength ? 'min length 4 chars' : undefined);\n","import React, { useState } from 'react';\nimport { InputAdornment, IconButton } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { TextFieldInput } from './TextFieldInput';\nimport { minLengthValidation } from './formValidation';\n\nexport const TextFieldPassword = () => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <TextFieldInput\n      name=\"password\"\n      type={showPassword ? 'text' : 'password'}\n      validate={minLengthValidation(4)}\n      inputProps={{\n        startAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  FormControl, Button, Box, InputAdornment, Typography, Snackbar,\n} from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { Form } from 'react-final-form';\nimport { TextFieldInput } from '../TextFieldInput';\nimport { TextFieldPassword } from '../TextFieldPassword';\nimport { minLengthValidation } from '../formValidation';\n\nexport const LoginForm = ({ onSubmit }) => {\n  const history = useHistory();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClose = (_, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setIsOpen(false);\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h5\" component=\"h2\">Log in</Typography>\n      <Form onSubmit={onSubmit}>\n        {({\n          handleSubmit, invalid, submitting, form, pristine,\n        }) => (\n\n          <form onSubmit={(e) => {\n            e.preventDefault();\n            handleSubmit(e).then(() => history.push('/')).catch(() => {\n              setIsOpen(true);\n              form.reset();\n            });\n          }}\n          >\n            <Box>\n              <FormControl margin=\"normal\">\n                <TextFieldInput\n                  name=\"login\"\n                  validate={minLengthValidation(4)}\n                  inputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Box mx={1.5}>\n                          <AccountCircle />\n                        </Box>\n\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </FormControl>\n            </Box>\n            <Box>\n              <FormControl margin=\"normal\">\n                <TextFieldPassword />\n              </FormControl>\n            </Box>\n\n            <Box my={1}>\n              <Button color=\"primary\" variant=\"contained\" type=\"submit\" disabled={invalid || pristine || submitting}>Log in</Button>\n            </Box>\n\n            <Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\n              <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={handleClose}>Sorry, such a user does not exist</MuiAlert>\n            </Snackbar>\n\n          </form>\n        )}\n      </Form>\n\n    </Box>\n  );\n};\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","export const API_HOST_OK_TRAVEL = 'https://oktravel.herokuapp.com';\n\nexport const API_OK_TRAVEL_ENDPOINTS = {\n  countries: `${API_HOST_OK_TRAVEL}/countries`,\n  login: `${API_HOST_OK_TRAVEL}/login`,\n  registration: `${API_HOST_OK_TRAVEL}/registration`,\n};\n","import { API_OK_TRAVEL_ENDPOINTS } from '../../const';\n\nexport const loginFormSubmitHandler = async (formValues) => {\n  const formValuesEntries = Object.entries(formValues);\n  const body = formValuesEntries.map((item) => item.join('=')).join('&');\n\n  const response = await fetch(API_OK_TRAVEL_ENDPOINTS.login, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n    },\n    body,\n  });\n\n  if (response.status !== 200) {\n    sessionStorage.removeItem('authToken');\n    throw new Error(`Error: ${response.status}, ${response.statusText}`);\n  }\n  const { token } = await response.json();\n\n  sessionStorage.setItem('authToken', token);\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormControl, Button, Box, InputAdornment, Typography, Snackbar,\n} from '@material-ui/core';\nimport { AccountCircle } from '@material-ui/icons';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { Form } from 'react-final-form';\nimport { TextFieldInput } from '../TextFieldInput';\nimport { TextFieldPassword } from '../TextFieldPassword';\nimport { minLengthValidation } from '../formValidation';\n\nexport const RegistrationForm = ({ onSubmit }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClose = (_, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setIsOpen(false);\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h5\" component=\"h2\">Registration</Typography>\n      <Form onSubmit={onSubmit}>\n        {({\n          handleSubmit, invalid, submitting, form, pristine,\n        }) => (\n\n          <form onSubmit={(e) => handleSubmit(e).then(() => {\n            setIsOpen(true);\n            form.reset();\n          })}\n          >\n            <Box>\n              <FormControl margin=\"normal\">\n                <TextFieldInput\n                  name=\"login\"\n                  validate={minLengthValidation(4)}\n                  inputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <Box mx={1.5}>\n                          <AccountCircle />\n                        </Box>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </FormControl>\n            </Box>\n            <Box>\n              <FormControl margin=\"normal\">\n                <TextFieldPassword />\n              </FormControl>\n            </Box>\n\n            {/* TO_DO: add field for uploading user photo */}\n\n            <Box my={1}>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                type=\"submit\"\n                disabled={invalid || pristine || submitting}\n              >\n                Register\n              </Button>\n            </Box>\n\n            <Snackbar open={isOpen} autoHideDuration={6000} onClose={handleClose}>\n              <MuiAlert elevation={6} variant=\"filled\" severity=\"success\" onClose={handleClose}>Registration success</MuiAlert>\n            </Snackbar>\n\n          </form>\n        )}\n\n      </Form>\n    </Box>\n\n  );\n};\n\nRegistrationForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { API_OK_TRAVEL_ENDPOINTS } from '../../const';\n\nexport const registrationFormSubmitHandler = async (formValues) => {\n  const formValuesEntries = Object.entries(formValues);\n  const body = formValuesEntries.map((item) => item.join('=')).join('&');\n\n  try {\n    await fetch(API_OK_TRAVEL_ENDPOINTS.registration, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',\n      },\n      body,\n    });\n  } catch (error) {\n    // TO_DO: implement error handler\n    // eslint-disable-next-line\n    console.log('Error:', error);\n  }\n};\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { LoginForm, loginFormSubmitHandler } from './LoginForm';\nimport { RegistrationForm } from './RegistrationForm/RegistrationForm';\nimport { registrationFormSubmitHandler } from './RegistrationForm/registrationFormSubmitHandler';\n\nexport const UserAuthorization = () => (\n  <Grid container justify=\"space-around\" spacing={5}>\n    <RegistrationForm onSubmit={registrationFormSubmitHandler} />\n    <LoginForm onSubmit={loginFormSubmitHandler} />\n  </Grid>\n\n);\n","import React, { useEffect, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { userAPI } from './api/api';\nimport MainContainer from './components/MainContainer/MainContainer';\nimport CountryPage from './countrypage/CountryPage';\nimport Footer from './components/Footer/Footer';\nimport GridLayout from './components/GridLayout/GridLayout';\nimport NavigationBar from './components/NavigationBar/NavigationBar';\nimport { UserAuthorization } from './userAuthorization/UserAuthorization';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [lang, setLang] = useState('en');\n\n  const currentLanguage = localStorage.getItem('selectedLanguage');\n\n  if (!localStorage.getItem('selectedLanguage')) {\n    setLang('en');\n    localStorage.setItem('selectedLanguage', lang);\n  }\n\n  const handleLanguageChange = (event) => {\n    setLang(event.target.value);\n    localStorage.setItem('selectedLanguage', event.target.value);\n  };\n\n  const handleSearchChange = (value) => {\n    setFilter(value);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await userAPI.getCountries(currentLanguage);\n\n      setData(result);\n    };\n\n    fetchData();\n  }, [lang, currentLanguage, filter]);\n\n  return (\n    <div className=\"App\">\n      <NavigationBar\n        handleSearchChange={handleSearchChange}\n        lang={currentLanguage}\n        handleLanguageChange={handleLanguageChange}\n      />\n\n      <MainContainer>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Redirect from=\"/\" to=\"/countries\" />}\n          />\n          <Route\n            exact\n            path=\"/countries\"\n            render={() => <GridLayout countries={data} filter={filter} />}\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={() => <UserAuthorization />}\n          />\n          <Route\n            exact\n            path=\"/countries/:countryId?\"\n            render={() => <CountryPage lang={currentLanguage} />}\n          />\n          <Route\n            path=\"*\"\n            render={() => (\n              <div>\n                <h1>404 not found</h1>\n              </div>\n            )}\n          />\n        </Switch>\n      </MainContainer>\n\n      <Footer lang={currentLanguage} />\n    </div>\n  );\n}\n\nconst AppContainer = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>\n);\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './App';\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n"],"sourceRoot":""}